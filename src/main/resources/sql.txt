CREATE TABLE ADMINISTRATOR_HONOR
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_ADMINISTRATOR_TYPE INTEGER NOT NULL,
    ID_HONOR INTEGER NOT NULL
);
CREATE TABLE ADMINISTRATOR_SYSTEM_MEBER
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_ADMIN_TYPE INTEGER NOT NULL,
    ID_SYSTEM_MEMBER INTEGER NOT NULL
);
CREATE TABLE FILM
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    TAGLINE VARCHAR(250) NOT NULL,
    AGE_RESTRICTION INTEGER NOT NULL,
    DURATION INTEGER NOT NULL,
    COVER VARCHAR(50) NOT NULL,
    DESCRIPTION CLOB NOT NULL,
    ID_RATING INTEGER NOT NULL,
    PREMIERE DATE NOT NULL
);
CREATE TABLE FILM_FILMMEMBER
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_FILM INTEGER NOT NULL,
    ID_FILM_MEMBER INTEGER NOT NULL
);
CREATE TABLE FILM_GENRE
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_FILM INTEGER NOT NULL,
    ID_GENRE INTEGER NOT NULL
);
CREATE TABLE FILM_HONOR
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_FILM INTEGER NOT NULL,
    ID_HONOR INTEGER NOT NULL
);
CREATE TABLE FILM_MEMBER
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    PATRONYMIC VARCHAR(50) NOT NULL,
    SURNAME VARCHAR(50) NOT NULL,
    BIRTH_DATE DATE NOT NULL,
    PHOTO VARCHAR(50) NOT NULL,
    ID_TYPE INTEGER NOT NULL
);
CREATE TABLE FILM_MEMBER_HONOR
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_FILM_MEMBER INTEGER NOT NULL,
    ID_HONOR INTEGER NOT NULL
);
CREATE TABLE FILM_MEMBER_TYPE
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(50) NOT NULL
);
CREATE TABLE FILM_REVIEW
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_FILM INTEGER NOT NULL,
    ID_REVIEW INTEGER NOT NULL
);
CREATE TABLE GENRE
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION CLOB NOT NULL
);
CREATE TABLE HONOR
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    IMAGE VARCHAR(50) NOT NULL,
    DESCRIPTION CLOB NOT NULL
);
CREATE TABLE INFORMATION_BLOCK
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(50) NOT NULL
);
CREATE TABLE INFORMATION_BLOCK_FILM
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_INFORMATION_BLOCK INTEGER NOT NULL,
    ID_FILM INTEGER NOT NULL
);
CREATE TABLE INFORMATION_BLOCK_NEWS
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_INFORMATION_BLOCK INTEGER NOT NULL,
    ID_NEWS INTEGER NOT NULL
);
CREATE TABLE NEWS
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    DATE DATE NOT NULL,
    TEXT CLOB NOT NULL,
    IMAGE VARCHAR(100) NOT NULL
);
CREATE TABLE RATING
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    VOTES INTEGER NOT NULL
);
CREATE TABLE REVIEW
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    DATE DATE NOT NULL,
    TEXT CLOB NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    PUBLISHED BOOLEAN NOT NULL,
    ID_RATING INTEGER NOT NULL
);
CREATE TABLE SYSTEM_MEMBER
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    PATRONYMIC VARCHAR(50) NOT NULL,
    SURNAME VARCHAR(50) NOT NULL,
    BIRTH_DATE DATE NOT NULL,
    PHOTO VARCHAR(50) NOT NULL,
    ID_TYPE INTEGER NOT NULL,
    LOGIN VARCHAR(50) NOT NULL,
    PASSWORD VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL
);
CREATE TABLE SYSTEM_MEMBER_FILM
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_SYSTEM_MEMBER INTEGER NOT NULL,
    ID_FILM INTEGER NOT NULL
);
CREATE TABLE SYSTEM_MEMBER_REVIEW
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_SYSTEM_MEMBER INTEGER NOT NULL,
    ID_REVIEW INTEGER NOT NULL
);
CREATE TABLE SYSTEM_MEMBER_TYPE
(
    ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
    NAME VARCHAR(50) NOT NULL
);
ALTER TABLE ADMINISTRATOR_HONOR ADD FOREIGN KEY (ID_HONOR) REFERENCES HONOR (ID);
ALTER TABLE ADMINISTRATOR_HONOR ADD FOREIGN KEY (ID_ADMINISTRATOR_TYPE) REFERENCES SYSTEM_MEMBER_TYPE (ID);
ALTER TABLE ADMINISTRATOR_SYSTEM_MEBER ADD FOREIGN KEY (ID_SYSTEM_MEMBER) REFERENCES SYSTEM_MEMBER (ID);
ALTER TABLE ADMINISTRATOR_SYSTEM_MEBER ADD FOREIGN KEY (ID_ADMIN_TYPE) REFERENCES SYSTEM_MEMBER_TYPE (ID);
ALTER TABLE FILM ADD FOREIGN KEY (ID_RATING) REFERENCES RATING (ID);
ALTER TABLE FILM_FILMMEMBER ADD FOREIGN KEY (ID_FILM) REFERENCES FILM (ID);
ALTER TABLE FILM_FILMMEMBER ADD FOREIGN KEY (ID_FILM_MEMBER) REFERENCES FILM_MEMBER (ID);
ALTER TABLE FILM_GENRE ADD FOREIGN KEY (ID_FILM) REFERENCES FILM (ID);
ALTER TABLE FILM_GENRE ADD FOREIGN KEY (ID_GENRE) REFERENCES GENRE (ID);
ALTER TABLE FILM_HONOR ADD FOREIGN KEY (ID_FILM) REFERENCES FILM (ID);
ALTER TABLE FILM_HONOR ADD FOREIGN KEY (ID_HONOR) REFERENCES HONOR (ID);
ALTER TABLE FILM_MEMBER ADD FOREIGN KEY (ID_TYPE) REFERENCES FILM_MEMBER_TYPE (ID);
ALTER TABLE FILM_MEMBER_HONOR ADD FOREIGN KEY (ID_FILM_MEMBER) REFERENCES FILM_MEMBER (ID);
ALTER TABLE FILM_MEMBER_HONOR ADD FOREIGN KEY (ID_HONOR) REFERENCES HONOR (ID);
ALTER TABLE FILM_REVIEW ADD FOREIGN KEY (ID_FILM) REFERENCES FILM (ID);
ALTER TABLE FILM_REVIEW ADD FOREIGN KEY (ID_REVIEW) REFERENCES REVIEW (ID);
CREATE UNIQUE INDEX UNIQUE_ID_REVIEW_INDEX_D ON FILM_REVIEW (ID_REVIEW);
ALTER TABLE INFORMATION_BLOCK_FILM ADD FOREIGN KEY (ID_FILM) REFERENCES FILM (ID);
ALTER TABLE INFORMATION_BLOCK_FILM ADD FOREIGN KEY (ID_INFORMATION_BLOCK) REFERENCES INFORMATION_BLOCK (ID);
ALTER TABLE INFORMATION_BLOCK_NEWS ADD FOREIGN KEY (ID_INFORMATION_BLOCK) REFERENCES INFORMATION_BLOCK (ID);
ALTER TABLE INFORMATION_BLOCK_NEWS ADD FOREIGN KEY (ID_NEWS) REFERENCES NEWS (ID);
ALTER TABLE REVIEW ADD FOREIGN KEY (ID_RATING) REFERENCES RATING (ID);
CREATE INDEX CONSTRAINT_8FE_INDEX_3 ON REVIEW (ID_RATING);
ALTER TABLE SYSTEM_MEMBER ADD FOREIGN KEY (ID_TYPE) REFERENCES SYSTEM_MEMBER_TYPE (ID);
CREATE UNIQUE INDEX UNIQUE_EMAIL_INDEX_2 ON SYSTEM_MEMBER (EMAIL);
CREATE UNIQUE INDEX UNIQUE_LOGIN_INDEX_2 ON SYSTEM_MEMBER (LOGIN);
ALTER TABLE SYSTEM_MEMBER_FILM ADD FOREIGN KEY (ID_FILM) REFERENCES FILM (ID);
ALTER TABLE SYSTEM_MEMBER_FILM ADD FOREIGN KEY (ID_SYSTEM_MEMBER) REFERENCES SYSTEM_MEMBER (ID);
ALTER TABLE SYSTEM_MEMBER_REVIEW ADD FOREIGN KEY (ID_REVIEW) REFERENCES REVIEW (ID);
ALTER TABLE SYSTEM_MEMBER_REVIEW ADD FOREIGN KEY (ID_SYSTEM_MEMBER) REFERENCES SYSTEM_MEMBER (ID);
CREATE UNIQUE INDEX UNIQUE_NAME_INDEX_2 ON SYSTEM_MEMBER_TYPE (NAME);
